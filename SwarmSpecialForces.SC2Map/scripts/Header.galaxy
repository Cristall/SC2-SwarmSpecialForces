// header file to declare function signartures

// UI-PlayerBoard.galaxy
void PlayerBoard_UpdatePlayer(int playerID);
// UI-Popup.galaxy
void Popup_CreateFromAcvTypeAndIdentifier(int playerID, int acvType, int acvIdentifier, text titleColored, text tooltip, string image);
void Popup_CreateFromPartAndDiff(int playerID, int part, int diff, bool smallTeamSize, text titleColored, text tooltip, string image);

// Achievements.galaxy
int Acv_FrameFromTypeAndIdentifier(int playerID, int acvType, int acvIdentifier);
int Acv_FrameFromPartAndDifficulty(int playerID, int part, int diff, bool smallTeamSize);
void Acv_Grind_Check(int playerID, int acvIdentifier);

// Bank.galaxy
void Bank_Save_ForcedAll (int playerID);
void Bank_Save_RequestSave(int playerID);

// Collectibles.galaxy
void Collectibles_InitPart();
void Collectibles_PsiOrbs_Init();
void Collectibles_MoopyHat_DropHat(unit moopy);

// Enemy.galaxy

// HeroAbilities.galaxy
void HeroAbility_RespawnEgg_RestoreEggCharge();

// HeroSelection.galaxy
void HeroSelection_UnlockHero(int playerID, int heroID);
void HeroSelection_SelectHero (int playerID, int heroID);
void HeroSelection_UnlockDiff(int playerID, int diff);
void HeroSelection_Player_ShowcaseSetRank (int playerID);
void HeroSelection_PlayerLeavesHandling(int playerID);
void CustomDiff_SkipP1();

// Hive.galaxy
void Hive_Transition();

// MapInit.galaxy
void MapInit_NotTutorial();

// PartProtoss.galaxy
unit PartProtoss_Lightning_GetUnit();
unit PartProtoss_Thunder_GetUnit();
void PartProtoss_AreaMech_Second_Open();
void PartProtoss_AreaPsi_Second_Open();
void PartProtoss_AreaPsi_Third_Open();
void PartProtoss_TriggerCreate();

// PartTerran.galaxy
void PartTerran_AreaJunker_Second_Open();
void PartTerran_AreaJunker_Third_Open();
void PartTerran_AreaBlackOps_Second_Open();
void PartTerran_AreaBlackOps_Third_Open();
void PartTerran_TriggerCreate();

// PartZerg.galaxy
void PartZerg_TriggerCreate();
void PartZerg_MoopyDoor_Open();
bool PartZerg_MoopyAllDoorsOpen();
void PartZerg_Moopy_SecretActivated_Init();
void PartZerg_Moopy_SecretEnable(int part, int secretIdentifier);
bool PartZerg_MoopyDoor_Requirement();

// Parts.galaxy
void Part_PartFinished();
void Part_InitVariables();

// Player.galaxy
void Player_AddExp(int playerID, fixed amount);
void Player_PartWin_UpdateAcv();
void Player_GainPoints();
void Player_KillReward(string unitType, point unitPosition);
void Player_IncreaseUpgradeCount (fixed increaseBase);
void Player_HeroDiesSwitch(int player);
void Player_Revive_ReleaseHero(int player, point position);

// Debug.galaxy
void Debug_ShowMessage(string input);
void Debug_Override_FirstPart();
